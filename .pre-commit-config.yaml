# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks
repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      # Fails if there are any ">>>>>" lines in files due to merge conflicts.
      - id: check-merge-conflict
      # Trims trailing whitespace. Allow a single space on the end of .md lines for hard line breaks.
      - id: trailing-whitespace
        args: [--markdown-linebreak-ext=md]
      # Makes sure files end in a newline and only a newline;
      - id: end-of-file-fixer
      # Attempts to load all TOML files to verify syntax.
      - id: check-toml
      # Attempts to load all yaml files to verify syntax; unsafe: only check syntax, do not load yaml
      - id: check-yaml
        args: ["--unsafe"]
      # Check for symlinks that do not point to anything.
      - id: check-symlinks
      # Fail if staged files are above a certain size.
      # To add a large file, use 'git lfs track <file>; git add <file> to track large files with
      # git-lfs rather than commiting them directly to the git history
      - id: check-added-large-files
        args: ["--maxkb=500"]

        # HALT! Before you exclude a large file and commit it, forever
        # bloating our repo size, did you:
        # (1) use a CLI tool like imageoptim to compress them if they are images
        # (2) think hard about whether using DVC or git-lfs is more appropriate
        #     for the file--such as in the case of CSV files or other data
        # This can be confusing. Reach out for help in our chat to help decide
        # how to deal adding these large files you have :)
        exclude: |
          (?x)(
              ^example/large/file.csv|
              ^example/large/sklearn-model.pkl
          )
      # Sort requirements in requirements.txt files.
      - id: requirements-txt-fixer
      # Prevent addition of new git submodules.
      - id: forbid-new-submodules
      # Prevent committing directly to trunk (since Bitbucket wants us to pay for this feature)
      - id: no-commit-to-branch
        args: ["--branch=main"]
      # This hook detects AWS credentials in the codebase.
      # It is recommended to use environment variables or AWS Secrets Manager instead of hardcoding credentials. 
      - id: detect-aws-credentials
      # Detects the presence of private keys
      - id: detect-private-key

  - repo: https://github.com/PyCQA/pylint
    rev: v3.0.0a6
    hooks:
      - id: pylint
        args: [--rcfile=.pylintrc]

  - repo: https://github.com/charliermarsh/ruff-pre-commit
    rev: "v0.0.261"
    hooks:
      - id: ruff
        args: [--fix, --exit-non-zero-on-fix, --config=ruff.toml]

  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort
        name: isort (python)
        args: [--settings=.isort.cfg]

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: "v1.2.0"
    hooks:
      - id: mypy
        args: [--no-strict-optional, --ignore-missing-imports]

  - repo: https://github.com/pycqa/flake8
    rev: "6.0.0" # pick a git hash / tag to point to
    hooks:
      - id: flake8
        additional_dependencies:
          - radon
          - flake8-docstrings
        args: [--config=.flake8]
